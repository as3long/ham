var lrucache = require('../lib/lib/utils/lrucache');
var should = require('should');
var cache = lrucache.create(2);

describe('lrucache', function() {
  describe('lrucache的基础功能', function() {
    it('lrucache.set,lrucache.get', function() {
        cache.set('a',1);
        cache.get('a').should.be.equal(1);
        cache.has('a').should.be.equal(true);
    });
    
    it('检测lruchahe超过上限的功能是否正常', function() {
        cache.set('a',2);
        cache.get('a').should.be.equal(2);
        cache.set('b',2);
        cache.get('b').should.be.equal(2);
        cache.set('c',3);
        cache.get('c').should.be.equal(3);
        should(cache.get('a')).be.null;
    });
    
    it('检测lrucache清除功能是否正常', function() {
        cache.clear();
        cache.size().should.be.equal(0);
    });
    
    it('检测lrucache超时之后功能是否正常', function(done) {
        cache.clear();
        cache.set('timer', 4, 10);
        
        setTimeout(function() {
            should(cache.get('timer')).be.null;
            done();
        }, 20);
    });
  });
});